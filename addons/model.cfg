class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};	
class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};	
	class Plane: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"alt","",
			"alt2","",
			"mph","",
			"mph2","",
			"vert_speed","",
			"vert_speed2","",
			"nm_alt","",
			"hud_alt","",
			"hud_speed","",
			"rpm","",
			"kompas","",
			"kompas2","",
			"hodinova","",
			"hodinova2","",
			"minutova","",
			"minutova2","",
			"lkh klapka","",
			"pkh klapka","",
			"lkd klapka","",
			"pkd klapka","",
			"leva smerovka","",
			"leva vejskovka","",
			"prava smerovka","",
			"prava vejskovka","",
			"ls klapka","",
			"ps klapka","",
			"predni kolo","",
			"levy kolo","",
			"pravy kolo","",
			"vrtule 1","",
			"vrtule","",
			"damageHide",""
		};
	};
	class Plane_Base_F: Plane
	{
		skeletonInherit = "Plane";
		skeletonBones[] =
		{
			"stick_pilot",""
		};
	};
	class MV22Skeleton: Plane_Base_F
	{
		isDiscrete=0;
		skeletonInherit="Plane_Base_F";
		skeletonBones[]=
		{
			"altB_1","",
			"altR_1","",
			"flapx","",
			"gearx","",
			"vario_3","",
			"vario_1","",
			"engine_3","",
			"alt_3","",
			"mph_3","",
			"mph_1","",
			"kompas_3","",
			"kompas_4","",
			"horizont_3","",
            "wing","",
			"engine_1","wing",
			"rpm_1","",
			"rpm_2","",
			"fuel_1","",
			"fuel_2","",
			"engine_1_prop","engine_1",
			"engine_1_move","engine_1",
			"engine_2","wing",
			"engine_2_prop","engine_2",
			"engine_2_move","engine_2",
            "engine_prop_1_1a","engine_1_prop",
            "engine_prop_1_1b","engine_prop_1_1a",
            "engine_prop_1_2a","engine_1_prop",
            "engine_prop_1_2b","engine_prop_1_2a",
            "engine_prop_1_3a","engine_1_prop",
            "engine_prop_1_3b","engine_prop_1_3a",
            "engine_prop_2_1a","engine_2_prop",
            "engine_prop_2_1b","engine_prop_2_1a",
            "engine_prop_2_2a","engine_2_prop",
            "engine_prop_2_2b","engine_prop_2_2a",
            "engine_prop_2_3a","engine_2_prop",
            "engine_prop_2_3b","engine_prop_2_3a",
			"flap_1","wing",
			"flap_2","wing",
			"elevator","",
			"rudder_1","",
			"rudder_2","",
			"gear_1_1","",
			"gear_2_1","",
			"gear_2_2","",
			"gear_1_1_damper","gear_1_1",
			"gear_2_1_damper","gear_2_1",
			"gear_2_2_damper","gear_2_2",
			"gear_1_1_stabil","gear_1_1_damper",
			"gear_2_1_stabil","gear_2_1_damper",
			"gear_2_2_stabil","gear_2_2_damper",
			"wheel_1_1","gear_1_1_damper",
			"wheel_2_1","gear_2_1_damper",
			"wheel_2_2","gear_2_2_damper",
			"hatch_1_1","",
			"hatch_1_2","",
			"hatch_2_1","",
			"hatch_2_2","",
			"hatch_3_1","",
			"hatch_3_2","",
			"door1_top","",
			"door1_bottom","",
			"ramp_top","",
			"ramp_bottom","",
			"display_off","",
			"fuel_probe","",
			"turret","",
			"gun","turret",
			"turret1_fold","",			
			"turret1","turret1_fold",
			"gun1","turret1",
			"turret2_fold","",
			"turret2","turret2_fold",
			"gun2","turret2",
			"gatling_2","gun2",			
			"seats","",
			"hatch_right","",
			"hatch_left","",
			"hatch_top","",
			"idws_station",""
		};
	};
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh",
			"Light_L",
			"Light_R",
			"Light_L_hitpoint",
			"Light_R_hitpoint"			
		};
	};
	class Plane: Vehicle
	{
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	// Metabolism temperature of the model (in celsius)
		sectionsInherit="Vehicle";
		sections[]=
		{
			"vrtule staticka",
			"vrtule blur",
			"trup",
			"zbytek"			
		};
		skeletonName="Plane";
		class Animations
		{
			class damageHide
			{
					type="hide";
					source="damage";
					selection="damageHide";
			};
			class IndicatorAltBaro: Rotation
			{
				source="altBaro";
				sourceAddress="loop";
				selection="alt";
				axis="osa_alt";
				memory=0;
				maxValue=304;
				angle1="rad -360";
			};
			class IndicatorAltBaro2: IndicatorAltBaro
			{
				selection="alt2";
				axis="osa_alt2";
			};
			class IndicatorAltRadar: Rotation
			{
				source="altRadar";
				selection="nm_alt";
				axis="osa_nm_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltRadar2: IndicatorAltRadar
			{
				selection="nm_alt2";
				axis="osa_nm_alt2";
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="osa_mph";
				memory="false";
				maxValue=125;
				angle1="rad -320";
			};
			class IndicatorSpeed2: IndicatorSpeed
			{
				selection="mph2";
				axis="osa_mph2";
			};
			class IndicatorVertSpeed: Rotation
			{
				source="vertSpeed";
				selection="vert_speed";
				axis="osa_vert_speed";
				minValue=-30;
				maxValue=30;
				angle1="rad -300";
			};
			class IndicatorVertSpeed2: IndicatorVertSpeed
			{
				selection="vert_speed2";
				axis="osa_vert_speed2";
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="osa_rpm";
				memory="false";
				maxValue=12;
				angle1="rad -320";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection="rpm2";
				axis="osa_rpm2";
			};
			class IndicatorCompass: Rotation
			{
				source="direction";
				selection="kompas";
				axis="osa_kompas";
				memory="false";
				minValue=-3.141593;
				maxValue=3.141593;
				angle1="rad -360";
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="kompas2";
				axis="osa_kompas2";
			};
			class WatchHour: Rotation
			{
				source="clockHour";
				selection="hodinova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchHour2: WatchHour
			{
				selection="hodinova2";
				axis="osa_time2";
			};
			class WatchMinute: Rotation
			{
				source="clockMinute";
				selection="minutova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchMinute2: WatchMinute
			{
				selection="minutova2";
				axis="osa_time2";
			};
			class FWheel
			{
				type="rotation";
				source="gear";
				selection="predni kolo";
				axis="osa predniho kola";
				minValue=-1;
				maxValue=1;
				angle0="rad -104.4";
				angle1="rad 104.4";
			};
			class LWheel: FWheel
			{
				selection="levy kolo";
				axis="osa leveho kola";
				angle0="rad -81";
				angle1="rad 81";
			};
			class RWheel: LWheel
			{
				selection="pravy kolo";
				axis="osa praveho kola";
			};
			class FWheelRot
			{
				type="rotationX";
				source="wheel";
				selection="predni kolo rot";
				axis="predni kolo rot";
				memory="false";
				minValue=0;
				maxValue=2;
				sourceAddress="loop";
				angle0=0;
				angle1="-rad 360";
			};
			class LWheelRot: FWheelRot
			{
				selection="levy kolo rot";
				axis="levy kolo rot";
				minValue=0;
				maxValue=2.300000;
			};
			class RWheelRot: LWheelRot
			{
				selection="pravy kolo rot";
				axis="pravy kolo rot";
			};
			class LFlap
			{
				type="rotation";
				source="flap";
				selection="ls klapka";
				axis="osa ls klapky";
				angle0=0;
				angle1="rad -28.6";
			};
			class RFlap
			{
				type="rotation";
				source="flap";
				selection="ps klapka";
				axis="osa ps klapky";
				angle0=0;
				angle1="rad 28.6";
			};
			class LElevator
			{
				type="rotation";
				source="elevator";
				selection="leva vejskovka";
				axis="osa leve vejskovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 28.6";
				angle1="rad -28.6";
			};
			class RElevator: LElevator
			{
				selection="prava vejskovka";
				axis="osa prave vejskovky";
			};
			class LAileronT
			{
				type="rotation";
				source="aileronT";
				selection="lkh klapka";
				axis="osa lkh klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			class RAileronT
			{
				type="rotation";
				source="aileronB";
				selection="pkh klapka";
				axis="osa pkh klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class LAileronB
			{
				type="rotation";
				source="aileronB";
				selection="lkd klapka";
				axis="osa lkd klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class RAileronB
			{
				type="rotation";
				source="aileronT";
				selection="pkd klapka";
				axis="osa pkd klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			/*class LRudder
			{
				type="rotation";
				source="rudder";
				selection="leva smerovka";
				axis="osa leve smerovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 22.9";
				angle1="rad -22.9";
			};
			class RRudder: LRudder
			{
				selection="prava smerovka";
				axis="osa prave smerovky";
			};*/
			class Rotor0
			{
				type="rotation";
				source="rotor";
				selection="vrtule";
				axis="osa vrtule";
				angle0=0;
				angle1="rad 360";
			};
			class Rotor1: Rotor0
			{
				selection="vrtule 1";
				axis="osa vrtule 1";
			};
		};
	};
	class Plane_Base_F: Plane
	{
		skeletonName = Plane_Base_F;

		class Animations: Animations
		{
			class Stick_Pilot_Bank
			{
				type="rotation";
				axis="stick_pilot_bank_axis";
				source="aileron";
				selection="stick_pilot";
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad -44";
				angle1="rad 44";
			};
			class Stick_Pilot_Dive
			{
				type="rotation";
				axis="stick_pilot_dive_axis";
				source="elevator";
				selection="stick_pilot";
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad -44";
				angle1="rad 44";
			};
		};
	};
	class MV22: Plane_Base_F
	{
		skeletonName="MV22Skeleton";
		sectionsInherit="Plane_Base_F";
		sections[]=
		{
			"camo1",
			"camo2",
			"body",
			"karoserie",
			"palivo",
			"zbytek",
			"Light_R2",
			"Light_L2",
			"lights_brake",
			"lights_running",
			"podsvit pristroju",		
			"engine_blur",
			"engine_static",
			"Light_L",
			"Light_R",
			"Light_L_hitpoint",
			"Light_R_hitpoint",
			"glass1",
			"glass2",
			"glass3",
			"glass4",
			"glass5",
			"glass6",
			"glass7",
			"glass8",
			"glass9"			
		};
		class Animations
		{
	        class damageHide
	        {
	            type="hide";
	            source="damage";
	            selection="damageHide";
	        };
			class display_on: Rotation
			{
				type="hide";
				source="rpm";
				selection="display_off";
				minValue=-0.5;
				maxValue=0.5;
				hidevalue=0.9;
				sourceAddress="clamp";
			};
			class IndicatorFlaps: Rotation
			{
				type="translation";
				source="flap";
				selection="flapx";
				axis="gearx_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.500000;
				offset0=-10.000000;
				offset1=0.000000;
			};
			class IndicatorGear: Rotation
			{
				type="translation";
				source="gear";
				selection="gearx";
				axis="gearx_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				offset0= 0.000000;
				offset1=-10.000000;
			};
			class kompas_3: Rotation
			{
				source="direction";
				selection="kompas_3";
				memory=0;
				axis="kompas_3_axis";
				minValue=-3.141593;
				maxValue=3.141593;
				angle0=0;
				angle1="+rad 360";
			};
			class kompas_4: kompas_3
			{
				selection="kompas_4";
				axis="kompas_4_axis";
				angle0=0;
				angle1="-rad 360";
			};
			class HorizonDive
			{
				type="rotationX";
				source="horizondive";
				selection="horizont_3";
				axis="horizont_3_axis";
				memory=0;
				minValue="rad -90";
				maxValue="rad 90";
				angle0=-1.570796;
				angle1=1.570796;
			};
			class HorizonBank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont_3";
				axis="HorizontBank_3_axis";
				memory=0;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283185;
				angle1=6.283185;
			};
			class IndicatorSpeed3: Rotation
			{
				source="speed";
				selection="mph_3";
				axis="alt_3_axis";
				memory=1;
				minValue=-18.750000*600/405;
				maxValue=112.500000*600/405;
				angle0=-0.327000/1.609344;
				angle1=1.963495/1.609344;
			};
			class IndicatorSpeed1: Rotation
			{
				source="speed";
				selection="mph_1";
				axis="mph_1_axis";
				memory=1;
				minValue=0;
				maxValue=210;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorRPM1: Rotation
			{
				source="rpm";
				selection="rpm_1";
				axis="rpm_1_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorRPM2: IndicatorRPM1
			{
				source="rpm";
				selection="rpm_2";
				axis="rpm_2_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorAltRadar3: Rotation
			{
				source="altRadar";
				selection="alt_3";
				axis="alt_3_axis";
				minValue=0.000000;
				maxValue=10000.000000;
				angle0=0.000000;
				angle1=4.320000;
			};
			class IndicatorAltRadar1: IndicatorAltRadar3
			{
				source="altRadar";
				selection="altr_1";
				axis="altr_1_axis";
				angle0=0.000000;
				angle1=3.665000;
			};
			class IndicatorAltBaro1: Rotation
			{
				source="altBaro";
				selection="altb_1";
				axis="altb_1_axis";
				minValue=0.000000;
				maxValue=10000.000000;
				angle0=0.000000;
				angle1=3.665000;
			};
			class IndicatorVertSpeed3: Rotation
			{
				source="vertSpeed";
				selection="vario_3";
				axis="vario_3_axis";
				memory=0;
				minValue=-60.000000;
				maxValue=60.000000;
				angle0=0.506000;
				angle1=-0.506000;
			};
			class IndicatorVertSpeed1: IndicatorVertSpeed3
			{
				selection="vario_1";
				axis="vario_1_axis";
				memory=0;
				minValue=-60.000000;
				maxValue=60.000000;
				angle0=2.268928;
				angle1=-2.268928;
			};
			class IndicatorFuel1: Rotation
			{
				source="fuel";
				selection="fuel_1";
				axis="fuel_1_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorFuel2: IndicatorFuel1
			{
				selection="fuel_2";
				axis="fuel_2_axis";
			};
			class Flap_1: Rotation
			{
				source="flap";
				selection="flap_1";
				axis="flap_1_axis";
				angle1="rad 75";
			};
			class Flap_2: Flap_1
			{
				selection="flap_2";
				axis="flap_2_axis";
				angle1="rad -75";
			};
			class ElevatorFL: Rotation
			{
				source="elevator";
				selection="elevator";
				axis="elevator_axis";
				minValue=-1;
				maxValue=1;
				angle0="rad -14";
				angle1="rad 14";
			};
			class RudderL: Rotation
			{
				source="rudder";
				selection="rudder_1";
				axis="rudder_1_axis";
				minValue=-1;
				maxValue=1;
				angle0="rad 22.9";
				angle1="rad -22.9";
			};
			class RudderR: RudderL
			{
				selection="rudder_2";
				axis="rudder_2_axis";
			};
			class Engine_1: Rotation
			{
				source="thrustVector";
				selection="engine_1";
				axis="engine_1_axis";
				minValue=0.000000;
				maxValue=1.00000;
				angle1=0.000000;
				angle0=1.570796;
			};
			class Engine_2: Engine_1
			{
				selection="engine_2";
				axis="engine_2_axis";
				angle1=0.000000;
				angle0=-1.570796;
			};
			class Rotor_1: Rotation
			{
				source="rotor";
				selection="engine_1_move";
				axis="engine_1_prop_axis";
				angle1="rad -360";
			};
			class Rotor_2: Rotor_1
			{
				selection="engine_2_move";
				axis="engine_2_prop_axis";
				angle1="rad 360";
			};	
			class Gear_1_1_Steering
			{
				type="rotationY";
				source="rudder";
				selection="gear_1_1";
				axis="gear_1_1_steering_axis";
				memory=1;
				minValue=-9;
				maxValue=9;
				angle0="rad -45";
				angle1="rad +45";
			};
			class Gear_1_1: Rotation
			{
				source="gear";
				selection="gear_1_1";
				axis="gear_1_1_axis";
				maxValue=0.700000;
				angle1="rad -90";
			};
			class Gear_2_1: Gear_1_1
			{
				selection="gear_2_1";
				axis="gear_2_1_axis";
				minValue=0.200000;
				maxValue=0.800000;
			};
			class Gear_2_2: Gear_2_1
			{
				selection="gear_2_2";
				axis="gear_2_2_axis";
				angle1="rad 90";
			};
			class Gear_1_1_Damper
			{
				type="translation";
				source="Damper_1_source";
				selection="gear_1_1_damper";
				axis="gear_2_1_damper_axis";
				memory=1;
				/*minValue=4.300000;
				maxValue=4.500000;*/
				maxValue=0.300000;
				minValue=0.000000;
				angle0=0;
				angle1=-0.500000;
				offset0=0;
				offset1=-0.500000;
			};
			class Gear_2_1_Damper: Gear_1_1_Damper
			{
				selection="gear_2_1_damper";
				//maxValue=4.600000;
                source="Damper_2_source";
				angle0=0;
				offset0=0;				
				angle1=-1.500000;
				offset1=-1.500000;
			};
			class Gear_2_2_Damper: Gear_2_1_Damper
			{
				selection="gear_2_2_damper";
				source="Damper_3_source";
			};
			class Gear_1_1_Stabil: Gear_1_1_Damper
			{
				type="rotation";
				selection="gear_1_1_stabil";
				axis="gear_1_1_stabil_axis";
				angle0=0;
				angle1="rad -20";
			};
			class Gear_2_1_Stabil: Gear_2_1_Damper
			{
				type="rotation";
				selection="gear_2_1_stabil";
				axis="gear_2_1_stabil_axis";
				angle0=0;
				angle1="rad -20";
			};
			class Gear_2_2_Stabil: Gear_2_1_Stabil
			{
				selection="gear_2_2_stabil";
			};
			class Wheel_1_1
			{
				type="rotationX";
				source="wheel";
				selection="wheel_1_1";
				axis="";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1="rad -180";
			};
			class Wheel_2_1: Wheel_1_1
			{
				selection="wheel_2_1";
				axis="wheel_2_1_axis";
				angle1="rad -160";
			};
			class Wheel_2_2: Wheel_2_1
			{
				selection="wheel_2_2";
				axis="wheel_2_2_axis";
			};
			class Hatch_1_1: Rotation
			{
				source="gear";
				selection="hatch_1_1";
				axis="hatch_1_1_axis";
				minValue=0.700000;
				maxValue=1;
				angle0="rad 90";
				angle1=0;
			};
			class Hatch_1_2: Hatch_1_1
			{
				selection="hatch_1_2";
				axis="hatch_1_2_axis";
				angle0="rad -90";
			};
			class Hatch_2_1: Hatch_1_1
			{
				sourceAddress="mirror";
				selection="hatch_2_1";
				axis="hatch_2_1_axis";
				minValue=0;
				maxValue=0.500000;
				angle0=0;
				angle1="rad 90";
			};
			class Hatch_2_2: Hatch_2_1
			{
				selection="hatch_2_2";
				axis="hatch_2_2_axis";
				angle1="rad -90";
			};
			class Hatch_3_1: Hatch_1_1
			{
				selection="hatch_3_1";
				axis="hatch_3_1_axis";
				angle0=-1.570796;
				angle1=0.000000;
			};
			class Hatch_3_2: Hatch_3_1
			{
				selection="hatch_3_2";
				axis="hatch_3_2_axis";
				angle0="rad 90";
			};
			class door1_top: Rotation
			{
				type="rotation";
				source="door_1_1";
				selection="door1_top";
				axis="door1_top_axis";
				angle1=1.3;
			};
			class door1_top1: Rotation
			{
				type="translation";
				source="door_1_1";
				selection="door1_top";
				begin="door1_top_beg";
				end="door1_top_end";
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				offset0=0;
				offset1=+1.2;				
			};			
			class door1_bottom: Rotation
			{
				type="rotation";
				source="door_1_1";
				selection="door1_bottom";
				axis="door1_bottom_axis";
				minValue=0.200000;
				angle1=-2.356194;
			};
			class ramp_bottom: Rotation
			{
				type="rotation";
				source="ramp";
				selection="ramp_bottom";
				axis="ramp_bottom_axis";
				minValue=0.200000;
				angle1=-0.698132;
			};
			class ramp_top: Rotation
			{
				type="rotation";
				source="ramp";
				selection="ramp_top";
				axis="ramp_top_axis";
				minValue=0.200000;
				angle1=0.436332;
			};
			class Hatch_move_left: Rotation
			{
				type="rotation";
				source="Hatch_move_source";
				selection="hatch_left";
				axis="hatch_left_axis";
				angle0="rad +178";
				angle1="rad 0";				
			};
			class Hatch_move_right: Rotation
			{
				type="rotation";
				source="Hatch_move_source";
				selection="hatch_right";
				axis="hatch_right_axis";
				angle0="rad -178";
				angle1="rad 0";				
			};	
			class Hatch_move_top
			{
				type="hide";
				source="Hatch_move_source";
				selection="hatch_top";
				animPeriod = 0;
				maxValue=1;
				minValue=0;
				hideValue=0;
                unhideValue=1;				
			};	
			class turret1_fold: Rotation
			{
				type="rotation";
				source="Hatch_move_source";
				selection="turret1_fold";
				axis="turret1fold_axis";
				minValue=0;
				maxValue=1;
				angle1=1.436332;
			};				
			class turret2_fold: Rotation
			{
				type="rotation";
				source="Hatch_move_source";
				selection="turret2_fold";
				axis="turret2fold_axis";
				minValue=0;
				maxValue=1;
				angle1=1.436332;
			};	
			class turret2_hide
			{
				type="hide";
				source="Hatch_move_source";
				selection="gun2";
				animPeriod = 0;
				maxValue=1;
				minValue=0;
				hideValue=0.63;
			};				
			class fuel_probe
			{
				type="translation";
				source="fuel_probe";
				selection="fuel_probe";
				begin="fuel_probe_axis_1";
				end="fuel_probe_axis_2";
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				offset0=0;
				offset1=1;
			};	
            class ObsTurret
			{
				type="rotationY";
				source="ObsTurret";
				selection="turret";
				axis="turret_axis";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};                        
			class ObsGun:ObsTurret
			{
				type="rotationX";
                source="ObsGun";
				selection="gun";
				axis="gun_axis";
			}; 
            class ObsTurret1
			{
				type="rotationY";
				source="ObsTurret1";
				selection="turret1";
				axis="turret_axis1";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};                        
			class ObsGun1:ObsTurret1
			{
				type="rotationX";
                source="ObsGun1";
				selection="gun1";
				axis="gun_axis1";
			};
            class GunnerTurret2
			{
				type="rotationY";
				source="ObsTurret1";
				selection="turret2";
				axis="turret_axis2";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};                        
			class GunnerGun2:GunnerTurret2
			{
				type="rotationX";
                source="ObsGun1";
				selection="gun2";
				axis="gun_axis2";
			}; 	
			class MachineGun: Rotation
			{
				selection="gatling_2";
				axis="gatling_2_axis";
				angle1="-600 * 3.141592654";
				source="revolving";
			};			
			class seats_hide_source
			{
				type="hide";
				source="seats_hide_source";
				selection="seats";
				maxValue=1;
				minValue=0;
				hideValue=1;
			};	
			class idws_hide_source
			{
				type="hide";
				source="idws_hide_source";
				selection="idws_station";
				maxValue=1;
				minValue=0;
				hideValue=1;
			};
			class idws1_hide_source : idws_hide_source
			{
				selection="turret1";
			};
			class idws2_hide_source : idws_hide_source
			{
				selection="turret1_fold";
			};
			class idws3_hide_source : idws_hide_source
			{
				selection="turret2";
			};
			class idws4_hide_source : idws_hide_source
			{
				selection="turret2_fold";
			};				
            // packing animations		
		    class pack_engine_1: Rotation
			{
				type="rotation";
				source="engine_prop_turn";
				selection="engine_1";
				axis="engine_1_axis";
				minValue=0.200000;
                maxValue=0.400000;
				angle1=90*3.141562653/180;
			};
		      class pack_engine_2: pack_engine_1
			{
				type="rotation";
				selection="engine_2";
                source="engine_prop_turn";
				axis="engine_2_axis";
				angle1=-90*3.141562653/180;
			};
		      class turn_wing: pack_engine_1
			{
				type="rotation";
				source="engine_prop_turn";
				selection="wing";
				axis="wing_axis";
				minValue=0.400000;
                maxValue=1.00000;
				angle1=90*3.141562653/180;
			};
			//source=engine_prop_##x##_##y##_turn;\
            #define ENGINE_PROP_TURN(x,y) class engine_prop_##x##_##y##_turn: Rotation\
			{\
				type="rotation";\
				source=engine_prop_turn;\
				selection=engine_prop_##x##_##y##a;\
				axis=axis_prop_##x##_##y##;\
				minValue=0.000000;\
                maxValue=0.100000;\
				angle1=66.6 *3.141562653/180;\
			}
            ENGINE_PROP_TURN(1,1);
            ENGINE_PROP_TURN(1,2);
            ENGINE_PROP_TURN(1,3);
            ENGINE_PROP_TURN(2,1);
            ENGINE_PROP_TURN(2,2);
            ENGINE_PROP_TURN(2,3);
			class Rotor_hide_source_1_1a
			{
				type="hide";
				source="engine_prop_turn";
				selection="engine_prop_1_1a";			
				maxValue=1;
				minValue=0;
				unhideValue=0.1;
				hideValue=0;
			};	
            class Rotor_hide_source_1_1b : Rotor_hide_source_1_1a {selection="engine_prop_1_1b";};
            class Rotor_hide_source_1_2a : Rotor_hide_source_1_1a {selection="engine_prop_1_2a";};	
            class Rotor_hide_source_1_2b : Rotor_hide_source_1_1a {selection="engine_prop_1_2b";};	
            class Rotor_hide_source_1_3a : Rotor_hide_source_1_1a {selection="engine_prop_1_3a";};	
            class Rotor_hide_source_1_3b : Rotor_hide_source_1_1a {selection="engine_prop_1_3b";};	
            class Rotor_hide_source_2_1a : Rotor_hide_source_1_1a {selection="engine_prop_2_1a";};			
            class Rotor_hide_source_2_1b : Rotor_hide_source_1_1a {selection="engine_prop_2_1b";};
            class Rotor_hide_source_2_2a : Rotor_hide_source_1_1a {selection="engine_prop_2_2a";};	
            class Rotor_hide_source_2_2b : Rotor_hide_source_1_1a {selection="engine_prop_2_2b";};	
            class Rotor_hide_source_2_3a : Rotor_hide_source_1_1a {selection="engine_prop_2_3a";};	
            class Rotor_hide_source_2_3b : Rotor_hide_source_1_1a {selection="engine_prop_2_3b";};
			class Rotor_hide_source_engine_1
			{
				type="hide";
				source="engine_prop_turn";
				selection="engine_1_move";			
				maxValue=1;
				minValue=0;
				hideValue=0.1;
			};				
            class Rotor_hide_source_engine_2 : Rotor_hide_source_engine_1 {selection="engine_2_move";};		
			//source=engine_prop_##x##_##y##_close;\
			#define ENGINE_PROP_CLOSE(x,y) class engine_prop_##x##_##y##_close: Rotation\
			{\
				type="rotation";\
				source=engine_prop_turn;\
				selection=engine_prop_##x##_##y##b;\
				axis=engine_prop_##x##_##y##_axis;\
				minValue=0.100000;\
                maxValue=0.200000;\
				angle1=125*3.141562653/180; \
			};
            ENGINE_PROP_CLOSE(1,1);
            ENGINE_PROP_CLOSE(1,3);
		    ENGINE_PROP_CLOSE(2,1);
            ENGINE_PROP_CLOSE(2,2);
		};
	};
};